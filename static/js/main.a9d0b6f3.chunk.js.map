{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","FeedbackButtonList","map","elem","name","charAt","toUpperCase","slice","FeedbackListItem","type","onClick","id","Statistics","props","StatisticsList","statisticsFields","field","console","log","Percentage","percentage","Section","title","children","Title","Notification","message","Message","App","state","good","neutral","bad","e","target","textContent","toLowerCase","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","total","toFixed","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9d0b6f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticsList\":\"Statistics_StatisticsList__37fCT\",\"Stats\":\"Statistics_Stats__2SQWA\",\"Good\":\"Statistics_Good__3A0Fe Statistics_Stats__2SQWA\",\"Neutral\":\"Statistics_Neutral__s119e Statistics_Stats__2SQWA\",\"Bad\":\"Statistics_Bad__lfoaw Statistics_Stats__2SQWA\",\"Total\":\"Statistics_Total__Iwzdj Statistics_Stats__2SQWA\",\"Percentage\":\"Statistics_Percentage__5ej1y Statistics_Stats__2SQWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackButtonList\":\"FeedbackOptions_FeedbackButtonList__2edy5\",\"FeedbackListItem\":\"FeedbackOptions_FeedbackListItem__hG34B\",\"Button\":\"FeedbackOptions_Button__E45Gc\",\"Good\":\"FeedbackOptions_Good__1-t3L FeedbackOptions_Button__E45Gc\",\"Neutral\":\"FeedbackOptions_Neutral__GFzw_ FeedbackOptions_Button__E45Gc\",\"Bad\":\"FeedbackOptions_Bad__1h4u1 FeedbackOptions_Button__E45Gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__Gtmph\",\"Title\":\"Section_Title__1Jpc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Notification_Message__NR_1n\",\"pulse\":\"Notification_pulse__2qx1E\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.FeedbackButtonList}>\r\n        {options.map(elem => {\r\n          const name = elem.name.charAt(0).toUpperCase() + elem.name.slice(1);\r\n          return (\r\n            <li key={elem.id} className={s.FeedbackListItem}>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onLeaveFeedback}\r\n                className={s[name]}\r\n              >\r\n                {name}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport './Statistics.module.css';\r\nimport s from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport statisticsFields from '../../data/statisticsFields.json';\r\n\r\nconst Statistics = props => (\r\n  <ul className={s.StatisticsList}>\r\n    {statisticsFields.map(field => {\r\n      if (field.name !== 'positive feedback') {\r\n        const className =\r\n          field.name.charAt(0).toUpperCase() + field.name.slice(1);\r\n        console.log(className);\r\n\r\n        return (\r\n          <li key={field.id} className={s[className]}>\r\n            {field.name}:<span>{props[field.name]}</span>\r\n          </li>\r\n        );\r\n      } else {\r\n        return (\r\n          <li key={field.id} className={s.Percentage}>\r\n            {field.name}:<span>{props.percentage}%</span>\r\n          </li>\r\n        );\r\n      }\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Section';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.Section}>\r\n      {title && <h1 className={s.Title}>{title}</h1>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Notification';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.Message}>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './Components/Statistics/Statistics';\nimport options from './data/feedbackButtons.json';\nimport Section from './Components/Section/Section';\nimport Notification from './Components/Notification/Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const target = e.target.textContent.toLowerCase();\n    this.setState(prevState => {\n      return {\n        [target]: prevState[target] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? +((good / total) * 100).toFixed() : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              percentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}